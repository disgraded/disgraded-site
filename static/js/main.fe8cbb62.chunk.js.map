{"version":3,"sources":["reducer/statisticsReducer.js","reduxStore.js","action/actionTypes.js","helper/reduxUtil.js","helper/historyApi.js","component/NavbarComponent.js","continer/Navigation.js","page/indexPage.js","router.js","index.js"],"names":["defaultState","store","createStore","combineReducers","statistics","state","arguments","length","undefined","_ref","type","payload","Object","objectSpread","console","log","applyMiddleware","thunk","reduxStore","ReduxUtil","path","this","dispatch","instance","getInstance","HistoryApi","api","createBrowserHistory","basename","forceRefresh","keyLength","reduxUtil","push","changeRoute","goBack","Navbar","title","onClick","children","react_default","a","createElement","className","href","e","preventDefault","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Item","_ref2","label","_ref2$name","name","_ref2$active","active","_ref2$onClick","Error","Navigation","activeItem","setState","_this2","NavbarComponent","itemClicked","data","Component","indexPage","Navigation_Navigation","Router","history","react_redux_es","react_router","exact","component","IndexPage","ReactDOM","render","router_Router","document","getElementById"],"mappings":"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","file":"static/js/main.fe8cbb62.chunk.js","sourcesContent":["import { CHANGE_ROUTE } from '../action/actionTypes'\n\nconst defaultState = {\n    \n}\n\nexport default (state = defaultState, { type, payload }) => {\n    state = { ...state };\n    \n    if (type === CHANGE_ROUTE) {\n        console.log(payload)\n    }\n\n    return state;\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\n\nimport statisticsReducer from './reducer/statisticsReducer'\n\nlet getMiddleware = () => {\n    if (process.env.NODE_ENV === 'development') {\n        return applyMiddleware(thunk, logger);\n    } else {\n        return applyMiddleware(thunk);\n    }\n}\n\nlet store = createStore(\n    combineReducers({\n        statistics : statisticsReducer\n    }),\n    getMiddleware(),\n);\n\nexport default () => {\n    return store;\n}\n","export const CHANGE_ROUTE = 'CHANGE_ROUTE'","import reduxStore from \"../reduxStore\";\nimport { CHANGE_ROUTE } from '../action/actionTypes';\n\nclass ReduxUtil {\n\n    store = reduxStore();\n\n    changeRoute(path) {\n        this.store.dispatch({\n            type: CHANGE_ROUTE,\n            payload: { path }\n        });\n    }\n}\n\nlet instance = null;\nReduxUtil.getInstance = () => {\n    if (instance === null) {\n        instance = new ReduxUtil();\n    }\n    return instance;\n};\n\nexport default ReduxUtil;\n","import { createBrowserHistory } from 'history';\nimport ReduxUtil from './reduxUtil';\n\nexport default class HistoryApi {\n    \n    api = createBrowserHistory({\n        basename: '',\n        forceRefresh: false,\n        keyLength: 6\n    });\n\n    reduxUtil = ReduxUtil.getInstance();\n\n    forward(path) {\n        this.api.push(path);\n        this.reduxUtil.changeRoute(path);\n    }\n    \n    back() {\n        // TODO; implement redux helper for changing route\n        this.api.goBack();\n    }\n}\n\nvar instance = null;\nHistoryApi.getInstance = function() {\n    if (instance === null) {\n        instance = new HistoryApi();\n    }\n    return instance;\n}\n","import React from 'react'\n\nconst Navbar = ({ title, onClick, children }) => {\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\n            <div className=\"container\">\n                <a className=\"navbar-brand\" href=\"#brand\" onClick={(e) => {\n                    e.preventDefault()\n                    if (typeof onClick === 'function') {\n                        onClick()\n                    }\n                }}>\n                    {title}\n                </a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav ml-auto\">\n                        {children}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.Item = ({label, name = label, active = false, onClick = null }) => {\n    if (onClick !== null && typeof onClick !== 'function') {\n        throw Error(\"[Navbar.Item] onClick prop must be function\")\n    }\n    return (\n        <li onClick={(e) => {\n            e.preventDefault()\n            if (onClick !== null) {\n                onClick({ name, label, active })\n            }\n        }} className={active ? \"nav-item active\" : \"nav-item\"}>\n            <a className=\"nav-link\" href={\"#\" + name}>{label}</a>\n        </li>\n    )\n}\n\nexport default Navbar","import React, { Component } from 'react'\nimport Navbar from '../component/NavbarComponent'\n\nexport default class Navigation extends Component {\n    \n    state = {\n        activeItem : null\n    }\n\n    itemClicked(name) {\n        this.setState({\n            activeItem : name\n        })\n    }\n    \n    render() {\n        const { activeItem } = this.state\n        return (\n            <Navbar title=\"DisGraded\" onClick={() => this.itemClicked(null)}>\n                <Navbar.Item active={activeItem === 'products'} name=\"products\" label=\"Products\" onClick={(data) => this.itemClicked(data.name)} />\n                <Navbar.Item active={activeItem === 'games'} name=\"games\" label=\"Games\" onClick={(data) => this.itemClicked(data.name)} />\n            </Navbar>\n        )\n    }\n}","import React from 'react'\nimport Navigation from '../continer/Navigation';\n\nexport default () => (\n    <Navigation />\n)","import React, { Component } from 'react';\nimport { Router as ReactRouter, Route, Switch } from 'react-router-dom';\nimport HistoryApi from './helper/historyApi';\nimport reduxStore from './reduxStore';\nimport { Provider } from 'react-redux';\n\nimport IndexPage from './page/indexPage';\n\nexport default class Router extends Component {\n\n    history = HistoryApi.getInstance();\n\n    render() {\n        const store = reduxStore();\n        return (\n            <Provider store={store}>\n                <ReactRouter history={this.history.api}>\n                    <Switch>\n                        <Route exact path=\"/\" component={IndexPage} />\n                    </Switch>\n                </ReactRouter>\n            </Provider>\n        );\n    }\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/js/src/index'\n\nimport Router from './router';\n\nReactDOM.render(<Router />, document.getElementById('root'))\n"],"sourceRoot":""}